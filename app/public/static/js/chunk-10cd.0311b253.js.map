{"version":3,"sources":["webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/coord/single/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/babel-runtime/core-js/json/stringify.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/theme/macarons.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyAction.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js"],"names":["zrUtil","__webpack_require__","BoundingRect","parsePercent","formatUtil","each","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","group","gap","maxWidth","maxHeight","x","y","Infinity","currentLineMaxSize","eachChild","child","idx","nextX","nextY","position","rect","getBoundingRect","nextChild","childAt","nextChildRect","moveX","width","newline","height","Math","max","moveY","box","vbox","curry","hbox","getLayoutRect","positionInfo","containerRect","margin","normalizeCssArray","containerWidth","containerHeight","left","top","right","bottom","verticalMargin","horizontalMargin","aspect","isNaN","copyLayoutParams","target","source","name","hasOwnProperty","exports","getAvailableSize","x2","y2","parseFloat","positionElement","el","opt","h","hv","v","boundingMode","type","needLocalTransform","transform","getLocalTransform","clone","applyTransform","defaults","elPos","dx","dy","attr","sizeCalculable","option","hvIdx","mergeLayoutParam","targetOption","newOption","isObject","ignoreSize","isArray","hResult","merge","vResult","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","i","length","obj","copy","getLayoutParams","echarts","boxplotVisual","boxplotLayout","registerVisual","registerLayout","_util","retrieve","extend","graphic","Model","_number","isRadianAroundZero","remRadian","createSymbol","matrixUtil","v2ApplyTransform","PI","makeAxisEventDataBase","axisModel","eventData","componentType","mainType","componentIndex","AxisBuilder","this","labelOffset","nameDirection","tickDirection","labelDirection","silent","Group","dumbGroup","slice","rotation","updateTransform","_transform","_dumbGroup","prototype","constructor","hasBuilder","builders","add","call","getGroup","axisLine","get","extent","axis","getExtent","matrix","pt1","pt2","lineStyle","lineCap","getModel","getLineStyle","Line","subPixelOptimizeLine","anid","shape","x1","y1","style","strokeContainThreshold","z2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","rotate","offset","r","sqrt","point","index","symbol","stroke","pos","cos","sin","axisTickLabel","tickEls","axisBuilder","scale","isBlank","tickModel","lineStyleModel","tickLen","ticksCoords","getTicksCoords","tickCoord","coord","tickEl","tickValue","push","buildAxisTick","labelEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","labelLayout","innerTextLayout","rawCategoryData","getCategories","isSilent","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textStyle","ecModel","textColor","getTextColor","dataToCoord","textEl","Text","setTextStyle","text","textAlign","getShallow","textVerticalAlign","textFill","targetType","value","decomposeTransform","buildAxisLabel","axisName","axisNameAvailableWidth","nameLocation","textStyleModel","gapSignal","isNameLocationCenter","nameRotation","textPosition","textRotate","rotationDiff","inverse","onLeft","endTextLayout","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","tooltipOpt","formatterParams","$vars","__fullText","__truncatedText","tooltip","show","content","formatter","axisRotation","textRotation","direction","ignore","current","next","firstRect","nextRect","mRotationBack","identity","mul","intersect","_default","module","compatStyle","normalizeToArray","compatLayoutProperties","LAYOUT_PROPERTIES","prop","COMPATITABLE_COMPONENTS","isTheme","series","seriesOpt","seriesType","clockWise","clockwise","pointerColor","path","split","val","overwrite","key","set","dataRange","visualMap","componentName","options","__DEV__","Eventful","interactionMutex","DataDiffer","map","mathMin","min","mathMax","mathPow","pow","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","w","e","n","s","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","lineWidth","fill","transformable","brushMode","removeOnClick","baseUID","BrushController","zr","_zr","_brushType","_brushOption","_panels","_track","_dragging","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","handler","eventName","bind","createCover","controller","brushOption","cover","coverRenderers","brushType","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","range","z","traverse","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","remove","trigger","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","Rect","makeStyle","draggable","cursor","drift","ondragend","opacity","invisible","updateBaseRect","localRange","handleSize","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","useStyle","childOfName","globalDir","getGlobalDirection","localDirection","reverse","join","transformDirection","getTransform","setShape","points","xmin","ymin","xmax","ymax","pointsToRect","clipByPanel","strokeNoScale","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","transformCoordToLocal","localZero","data","clipPath","preventDefault","rawE","event","mainShapeContain","contain","updateCoverByMouse","eventParams","thisBrushOption","p2","p1","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","enableBrush","release","off","doDisableBrush","take","on","doEnableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","cb","context","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","update","oldIndex","execute","id","newIndex","newBrushOption","unmount","dispose","mixin","mousedown","handleDragEnd","offsetX","offsetY","mousemove","currPanel","setCursorStyle","resetCursor","mouseup","lineX","getLineRenderer","lineY","localTrack","ends","polygon","Polyline","Polygon","xyIndex","otherExtent","getLinearBrushOtherExtent","getWidth","getHeight","RadiusAxis","AngleAxis","Polar","cx","cy","_radiusAxis","_angleAxis","polar","axisPointerEnabled","dimensions","model","containPoint","pointToCoord","containData","getAxis","dim","getAxes","getAxesByScale","scaleType","axes","angleAxis","radiusAxis","getAngleAxis","getRadiusAxis","getOtherAxis","getBaseAxis","getTooltipAxes","baseAxis","baseAxes","otherAxes","dataToPoint","clamp","coordToPoint","dataToRadius","dataToAngle","pointToData","radiusToData","angleToData","minAngle","maxAngle","radius","radian","atan2","dir","Gradient","createOnAllSeries","performRawSeries","reset","seriesModel","getData","colorAccessPath","visualColorAccessPath","color","getColorFromPalette","getSeriesCount","setVisual","isSeriesFiltered","setItemVisual","getDataParams","dataEach","hasItemOption","getItemModel","samplers","average","frame","sum","count","NaN","nearest","indexSampler","round","modifyOutputEnd","api","sampling","coordSys","coordinateSystem","sampler","valueAxis","size","rate","setData","downSample","mapDimension","textContain","graphicUtil","PATH_COLOR","isEmphasis","fontStyle","fontWeight","fontSize","fontFamily","getTextRect","SeriesModel","seriesModelMixin","BoxplotSeries","dependencies","defaultValueDimensions","defaultTooltip","defaultOption","zlevel","legendHoverLink","hoverAnimation","layout","boxWidth","itemStyle","borderWidth","emphasis","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","animationEasing","animationDuration","featureManager","brushLang","toolbox","brush","Brush","_brushMode","icon","keep","clear","title","proto","render","updateView","featureModel","isBrushed","eachComponent","brushModel","setIconStatus","getIcons","availableIcons","icons","onclick","dispatchAction","intervals","command","register","axisHelper","buildLabelElOption","elOption","axisPointerModel","labelPos","getValueLabel","precision","paddings","font","textRect","align","verticalAlign","viewWidth","viewHeight","confineInContainer","bgColor","label","seriesDataIndices","parse","getLabel","params","getAxisRawValue","seriesData","idxItem","getSeriesByIndex","seriesIndex","dataIndex","dataIndexInside","dataParams","isString","replace","isFunction","getTransformedPosition","layoutInfo","create","translate","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","startAngle","endAngle","legendModels","findComponents","filterSelf","getName","isSelected","_simpleLayoutHelper","simpleLayout","simpleLayoutEdge","eachSeriesByType","coordDim","concat","setItemLayout","graph","lang","magicTypeLang","magicType","MagicType","line","bar","stack","tiled","seriesOptGenreator","seriesId","markPoint","markLine","radioTypes","radio","indexOf","item","query","subType","newSeriesOpt","categoryAxis","axisType","axisIndex","queryComponents","boundaryGap","currentType","registerAction","payload","mergeOption","doCreateNode","env","urn","win","window","vmlInited","doc","document","canvasSupported","namespaces","zrvml","tagName","createElement","createNode","initVML","styleSheets","createStyleSheet","addRule","createGraphFromNodeEdge","encodeHTML","SankeySeries","getInitialData","links","edges","nodes","setNodePosition","localPosition","dataItem","localX","localY","getGraph","getEdgeData","edgeData","formatTooltip","multipleSeries","dataType","rawDataOpt","html","superCall","nodeWidth","nodeGap","layoutIterations","borderColor","curveness","makeAction","method","actionInfo","selected","geoModel","geo","regions","region","numberUtil","CoordinateSystem","Calendar","calendarModel","_model","doConvert","methodName","finder","getDimensionsInfo","getRangeInfo","_rangeInfo","getRect","_rect","getCellWidth","_sw","getCellHeight","_sh","getOrient","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","date","parseDate","getFullYear","m","getMonth","d","getDate","day","getDay","time","getTime","formatedDate","getNextNDay","Date","setDate","_lineWidth","getItemStyle","_getRangeInfo","_initRangeOption","weeks","whNames","cellSize","layoutParams","getBoxLayoutParams","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","start","end","week","nthWeek","pointToDate","dataToRect","contentShape","center","tl","tr","br","bl","nthX","floor","nthY","_getDateByWeeksAndDay","convertToPixel","convertFromPixel","rg","test","firstDay","setMonth","tmp","reversed","allDay","startDateNum","endDateNum","sign","fweek","lweek","rangeInfo","nthDay","calendarList","calendar","eachSeries","calendarSeries","createHashMap","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","dims","stackResultDimension","stackedOverDimension","targetData","isStackedByIndex","newData","v0","v1","byValue","stackedDataRawIndex","stackedDimension","getRawIndex","stackedByDimension","stackedOver","j","stackInfo","rawIndexOf","getByRawIndex","hostModel","stackInfoMap","getCalculationInfo","setCalculationInfo","legendFilter","Component","registerProcessor","registerSubTypeDefaulter","util","vec2","Draggable","SILENT","EmptyProxy","handlerNames","Handler","storage","painter","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","setHandlerProxy","isHover","displayable","rectHover","parent","zrX","zrY","lastHovered","lastHoveredTarget","__zr","findHover","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","nodeType","resize","dispatch","eventArgs","cursorStyle","targetInfo","eventHandler","eventPacket","eveType","topTarget","cancelBubble","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","which","makeEventPacket","eachOtherLayer","layer","exclude","list","getDisplayList","out","hoverCheckResult","_downEl","_downPoint","_upEl","dist","updateCenterAndZoom","res","setCenter","setZoom","zoom","Path","polyHelper","smooth","smoothConstraint","buildPath","ctx","globalListener","AxisPointerView","extendComponentView","globalAxisPointerModel","globalTooltipModel","getComponent","triggerOn","currTrigger","unregister","getZr","superApply","arguments","paths","_updatePathDirty","dirtyPath","__dirtyPath","__dirty","beforeBrush","getGlobalScale","createPathProxy","setScale","afterBrush","fixClipWithShadow","vec2Min","vec2Max","scaleAndAdd","v2Copy","cp0","cp1","isPointNull","p","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","prevIdx","k","prevP","ctrlLen","bezierCurveTo","lineTo","apply","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","sub","getBoundingBox","ptMin","ptMax","pt","len","result","stackedOnPoints","stackedOnSmooth","bbox","stackedOnBBox","closePath","LinkedList","head","_len","linkedListProto","insert","entry","Entry","insertEntry","prev","LRU","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","put","removed","leastUsedEntry","guid","Transformable","Animatable","Element","opts","isGroup","dirty","beforeUpdate","afterUpdate","attrKV","hide","refresh","setClipPath","addSelfToZr","removeClipPath","__clipTarget","removeSelfFromZr","animators","animation","addAnimator","removeAnimator","PictorialBarSeries","symbolSize","symbolRotate","symbolPosition","symbolOffset","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","barGap","progressive","setSelected","dataColor","sunburstLayout","dataFilter","listComponentHelper","toolboxModel","removeAll","itemSize","featureOpts","features","_features","featureNames","_featureNames","processFeature","makeBackground","titleText","__title","hoverStyle","makeFont","needPutOnTop","topOffset","feature","featureName","oldName","featureOpt","isUserFeatureName","Feature","unusable","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconStr","iconName","createIcon","setStyle","setHoverStyle","createIconPaths","status","iconStatus","view","zoomLimit","previousZoom","getZoom","getCenter","zoomMin","zoomMax","fixX","originX","fixY","originY","PathProxy","cubic","quadratic","arc","normalizeRadian","curve","windingLine","CMD","PI2","EPSILON","roots","extrema","swapExtrema","windingCubic","x0","y0","x3","y3","nRoots","cubicRootAt","y0_","y1_","nExtrema","t","unit","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","quadraticAt","windingArc","anticlockwise","diff","x_","angle","containPath","isStroke","xi","yi","cmd","M","L","containStroke","C","Q","A","rx","ry","theta","dTheta","_x","R","Z","a","b","isAroundEqual","pathData","layoutUtil","ParallelAxis","sliderMove","mathFloor","mathCeil","ceil","Parallel","parallelModel","_axesMap","_axesLayout","_init","restrict","parallelAxisIndex","createScaleByModel","isCategory","onBand","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","layoutLength","contains","unionExtentFromData","niceScaleExtent","_layoutAxes","winSize","layoutExtent","axisCount","axisExpandWidth","axisExpandCount","axisExpandable","axisExpandWindow","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","axisExtent","setExtent","posInfo","step","positionTable","horizontal","vertical","rotationTable","axisCoordToPoint","eachActiveState","callback","axesMap","dataDimensions","axisModels","axisDim","hasActiveSet","hasAxisBrushed","activeState","values","getValues","lenj","getActiveState","axisLayout","getAxisLayout","getSlidedAxisExpandWindow","behavior","delta","pointCoord","triggerArea","useJump","ComponentModel","axisModelCreator","axisModelCommonMixin","PolarAxisModel","getCoordSysModel","polarIndex","polarId","polarAxisDefaultExtendedOption","splitNumber","getAxisType","axisLabel","inBundle","moveTo","treemapVisual","treemapLayout","registerPreprocessor","history","restoreLang","restore","Restore","from","uid","resetOption","Pattern","image","repeat","getCanvasPattern","createPattern","zrLog","ZImage","ZText","arrayDiff","GradientManager","ClippathManager","ShadowManager","_graphic","svgPath","svgImage","svgText","parseInt10","parseInt","getSvgProxy","checkParentAvailable","insertAfter","prevSibling","nextSibling","insertBefore","appendChild","prepend","firstChild","removeChild","getTextSvgElement","__textSvgEl","getSvgElement","__svgEl","SVGPainter","root","zrId","_opts","svgRoot","setAttribute","cssText","gradientManager","clipPathManager","shadowManager","viewport","_svgRoot","_viewport","_visibleList","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","_paintList","setBackgroundColor","backgroundColor","background","markAllUnused","visibleList","listLen","newVisibleList","svgProxy","svgElement","prevSvgElement","indices","textSvgElement","added","addWithoutUpdate","markUsed","removeUnused","_getDefs","isForceCreating","defs","getElementsByTagName","children","display","_getSize","_width","_height","viewportStyle","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","innerHTML","pathToDataUrl","outerHTML","createMethodNotSupport","clazzUtil","axisPointerModelHelper","eventTool","throttleUtil","inner","makeInner","BaseAxisPointer","updateProps","animationModel","moveAnimation","props","propsEqual","lastProps","newProps","equals","lastProp","stopAnimation","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","forceRender","_axisModel","_axisPointerModel","_api","handle","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","getBandWidth","seriesDataCount","getAxisInfo","pointerOption","pointer","pointerEl","updateHandleTransform","isInit","handleModel","onmousemove","stop","onmousedown","_onHandleDragMove","_onHandleDragEnd","createOrUpdate","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axesInfo","doClear","buildLabel","enableClassExtend","ChartView","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","BoxplotView","oldData","_data","constDim","newIdx","symbolEl","createNormalBox","getItemLayout","setItemGraphicEl","oldIdx","getItemGraphicEl","itemLayout","updateNormalBoxData","eachItemGraphicEl","noop","BoxPath","initBaseline","transInit","updateMethod","itemModel","normalItemStyleModel","getItemVisual","TimelineModel","dataFormatMixin","SliderTimelineModel","interval","checkpointStyle","controlStyle","showPlayBtn","showPrevBtn","showNextBtn","itemGap","playIcon","stopIcon","nextIcon","prevIcon","RadialGradient","colorStops","globalCoord","global","inherits","idStart","normalize","Array","symbolType","colorQuery","opacityQuery","edge","getEdgeByIndex","node1","getVisual","node2","makeStyleMapper","AxisModel","activeIntervals","getAreaSelectStyle","setActiveIntervals","asc","areaSelectStyle","realtime","getDefaultLabel","createListFromArray","getLayoutOnAxis","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","cartesian2d","singleAxis","prepareStyleTransition","targetStyle","elOptionStyle","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","getDevicePixelRatio","getDimension","extra","updateCache","autoColor","isRectText","retrieve2","getFormattedLabel","styleEmphasis","retrieve3","visual","visualType","barLayout","currentSeriesIndices","getCurrentSeriesIndices","userParams","seriesName","dataInsideLength","encode","encodeDef","dimName","dataDimIndex","dimInfo","getDimensionInfo","isExtraCoord","coordDimIndex","wrapEncodeDef","currDirty","animatableModel","doCreateOrUpdate","elOptionType","__customGraphicType","__customPathData","__customImagePath","__customText","graphicType","makePath","Image","Clz","charAt","toUpperCase","createEl","targetProps","origin","textStroke","targetOpacity","initProps","updateEl","oldChildren","newChildren","diffChildrenByName","processAddUpdate","processRemove","diffGroupChildren","childOption","extendSeriesModel","getSource","extendChartView","incrementalPrepareRender","incrementalRender","setIncrementalAndHoverLayer","incremental","useHoverLayer","makeLabelFormatter","makeCategoryLabelsActually","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","listCacheSet","makeLabelsByCustomizedCategoryInterval","makeLabelsByNumericCategoryInterval","autoInterval","calculateCategoryInterval","makeAutoCategoryInterval","labelCategoryInterval","cache","categoryInterval","onlyTick","labelFormatter","ordinalScale","ordinalExtent","getLabelModel","startTick","tickCount","showMinMax","addItem","tVal","getTicks","createAxisLabels","makeCategoryLabels","ticks","makeRealNumberLabels","createAxisTicks","tickCategoryInterval","ticksCache","optionTickInterval","labelsResult","makeCategoryTicks","axisRotate","getRotate","isHorizontal","fetchAutoCategoryIntervalCalculationParams","unitSpan","unitW","unitH","maxW","maxH","dw","dh","lastAutoInterval","lastTickCount","DUMMY_COMPONENT_NAME_PREFIX","isIdInner","cptOption","innerUniqueIndex","has","defaultEmphasis","subOpts","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","isDataItemOption","mappingToExists","exists","newCptOptions","exist","makeIdAndName","mapResult","idMap","existCpt","assert","keyInfo","idNum","isNameSpecified","componentModel","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","isData","queryDataIndex","indexOfRawIndex","indexOfName","random","toFixed","hostObj","parseFinder","defaultMainType","parsedKey","match","queryType","toLowerCase","includeMainTypes","queryParam","models","dom","getAttribute","Scale","setting","_setting","_extent","_interval","init","getSetting","unionExtent","other","getApproximateExtent","thisExtent","_isBlank","setBlank","enableClassManagement","registerWhenExtend","_children","__storage","childCount","_doAdd","addBefore","splice","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","childRect","union","mathSin","mathCos","extremity","xDim","yDim","fromPoints","fromLine","fromCubic","fromQuadratic","tx","ty","fromArc","fixPosition","labelPositionOutside","setLabel","normalStyle","hoverLabelModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","_l","cubicProjectPoint","createListSimply","getDimensionTypeByAxis","_baseAxisDim","ordinalMeta","addOrdinal","xAxisModel","yAxisModel","xAxisType","yAxisType","getOrdinalMeta","coordDims","baseAxisDimIndex","baseAxisDim","otherAxisDim","baseAxisType","otherAxisType","newOptionData","newItem","unshift","coordDimensions","otherDims","itemName","dimsDef","dimensionsCount","createDimensions","List","nameList","dimensionsInfo","initData","clearColorPalette","colorIdx","colorNameMap","scope","requestColorNum","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","colors","paletteNum","getNearestColorPalette","createWrap","doneCallback","elExistsMap","delay","easing","done","animateTo","scrollDataIndex","legendModel","setScrollDataIndex","modelHelper","findPointFromSeries","processOnAxis","axisInfo","newValue","updaters","dontSnap","outputFinder","involveSeries","snapToValue","payloadBatch","minDist","Number","MAX_VALUE","minDiff","seriesModels","seriesNestestValue","dataDim","getAxisTooltipData","nestestValue","indicesOfNearest","buildPayloadsBySeries","snap","showPointer","showTooltip","showValueMap","dataByCoordSys","triggerTooltip","coordSysModel","coordSysKey","makeKey","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","makeMapperParam","illegalPoint","coordSysAxesInfo","isIllegalPoint","inputAxesInfo","shouldHide","coordSysMap","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","outputAxesInfo","valItem","useHandle","updateModelActually","sampleItem","escapeConnect","dispatchTooltipActually","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","batch","dispatchHighDownActually","imageHelper","getContext","trim","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","methods","textLines","l","measureText","adjustTextX","adjustTextY","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","substr","charCode","charCodeAt","getLineHeight","parsePlainText","padding","truncate","lineHeight","lines","outerHeight","truncOuterHeight","truncOuterWidth","outerWidth","parseRichText","contentBlock","lastIndex","exec","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","textPadding","truncateWidth","truncateHeight","tokens","tokenStyle","token","styleName","rich","tokenHeight","textHeight","textLineHeight","textWidth","tokenWidth","tokenWidthNotSpecified","percentWidth","textBackgroundColor","bgImg","findExistImage","isImageReady","paddingW","remianTruncWidth","block","str","isEmptyStr","strs","isLineHolder","tokensLen","$override","fn","getRichTextRect","getPlainTextRect","adjustTextPositionOnRect","distance","halfHeight","componentUtil","modelUtil","createTask","createRenderPlanner","renderPlanner","Chart","getUID","renderTask","plan","renderTaskPlan","renderTaskReset","highlight","toggleHighlight","downplay","chartProto","elSetState","state","dataIdx","progressiveRender","pipelineContext","progressMethodMap","updateLayout","updateVisual","markUpdateMethod","progress","forceFirstProgress","vmlCore","VMLPainter","vmlViewport","vmlRoot","_vmlRoot","_vmlViewport","oldDelFromStorage","oldAddToStorage","onRemove","onAdd","_firstPaint","__alreadyNotVisible","brushVML","_getWidth","_getHeight","vmlViewportStyle","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","seriesItem","visualDefault","VisualMapping","visualSolution","mapVisual","eachVisual","linearMap","extendComponentModel","stateList","replacableOptionKeys","dataBound","layoutMode","dimension","inRange","outOfRange","itemWidth","itemHeight","contentColor","inactiveColor","textGap","parentModel","_dataExtent","targetVisuals","controllerVisuals","mergeDefaultAndTheme","optionUpdated","thisOption","replaceVisualOption","resetItemSize","completeVisualOption","resetVisual","supplementVisualOption","createVisualMappings","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","eachTargetSeries","isTargetSeries","is","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","getDataDimension","optDim","listDimensions","dimNames","isCalculationCoord","base","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","visualData","isValidType","symbolExists","symbolSizeExists","visuals","categories","getValueState","getVisualMeta","dataToCoordSize","dataSize","dimIdx","halfSize","getSpanSign","handleEnds","handleIndex","span","minSpan","maxSpan","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","visualSymbol","layoutPoints","dataSample","PRIORITY","PROCESSOR","STATISTIC","treeLayout","Axis","Axis2D","coordExtent","getAxesOnZeroOf","getGlobalExtent","ret","toGlobalCoord","grid","coordToData","toLocalCoord","isTypedArray","enableClassCheck","_sourceType","SOURCE_FORMAT_ORIGINAL","SERIES_LAYOUT_BY_COLUMN","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_KEYED_COLUMNS","Source","fields","fromDataset","sourceFormat","seriesLayoutBy","dimensionsDefine","encodeDefine","startIndex","dimensionsDetectCount","seriesDataToSource","groupResult","axisList","groupSeriesByAxis","groupItem","bandWidth","seriesCount","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","calculateBase","halfWidth","cDimIdx","vDimIdx","cDim","vDims","axisDimVal","median","getPoint","end1","end2","end4","end5","addBodyEnd","layEndLine","point1","point2","endCenter","to","layoutSingleSeries","devicePixelRatio","log","timsort","Layer","requestAnimationFrame","viewRect","Painter","singleCanvas","nodeName","dpr","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","mainLayer","__builtin__","initContext","_domRoot","domRoot","createRoot","_hoverlayer","_hoverElements","isSingleCanvas","paintAll","_redrawId","clearColor","_backgroundColor","refreshHover","addHover","__hoverMir","elMirror","__from","removeHover","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","save","originalEl","invTransform","__clipPaths","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","self","clearRect","eachBuiltinLayer","virtual","drawImage","layerList","zi","__startIndex","__drawIndex","useTimer","now","startTime","__endIndex","firstEl","notClear","console","error","prevElClipPaths","wxa","draw","currentLayer","forcePaint","culling","isDisplayableCulled","clipPaths","prevClipPaths","isClipPathChanged","prevEl","setTransform","beginPath","clip","restoreTransform","doClip","insertLayer","layersMap","prevLayer","isLayerValid","prevDom","eachLayer","getLayers","updatePrevLayer","__used","incrementalLayerCount","getElementCount","_clearLayer","configLayer","config","layerConfig","_zlevel","delLayer","_progressiveLayers","clearLayer","getRenderedCanvas","imageLayer","pixelRatio","renderToCanvas","displayList","pathToImage","canvas","shadowBlurSize","hasStroke","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","imgShape","controlPosition","autoPlay","rewind","loop","playInterval","currentIndex","_names","_initData","setCurrentIndex","getCurrentIndex","isIndexMax","setPlayState","getPlayState","dataArr","idxArr","dimType","category","replaceReg","replaceMap","&","<",">","\"","'","c","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","addCommas","toCamelCase","upperCaseFirst","group1","formatTpl","tpl","paramsList","seriesLen","alias","formatTplSimple","param","getTooltipMarker","extraCssText","formatTime","isUTC","utc","S","capitalFirst","single","axisPosition","rectBound","positionMap","labelInside","isDimensionStacked","stackedDim","enableDataStack","dimensionInfoList","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","dimensionInfo","createInvertedIndices","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","getStackedDimension","targetDim","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","nameMap","_yearTextPositionControl","aligns","yearLabel","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","vAlign","monthLabel","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","dayLabel","firstDayOfWeek","weekText","keysFunction","sortKeysFunction","sortKeys","order","entries","array","entriesMap","mapObject","depth","sortKeyFunction","sort","keyFunction","valuesByKey","keyValue","mathSqrt","mathAtan2","nPoint","sx","sy","preprocessor","Geo","resizeGeo","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","aspectScale","useCenterAndSize","setViewRect","setGeoCoords","geoCoord","addGeoCoord","geoCreator","geoList","mapData","getMap","geoJson","specialAreas","geoIndex","mapModelGroupBySeries","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","mergeAll","getFilledRegions","originRegionArr","mapName","regionsArr","dataNameMap","properties","registerCoordinateSystem","forceLayout","gravity","pp","friction","warmUp","setFixed","fixed","setUnfixed","v12","nLen","n1","n2","repFact","rep","_helper","prepareDataCoordInfo","getStackedOnPoint","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","idx1","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","dataDimsForPoint","rawIndex","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","viewHelper","singleAxisHelper","AxisView","XY","WH","SingleAxisPointer","getPointDimIndex","pixelValue","elStyle","pointerShapeBuilder","dimIndex","currPosition","cursorOtherValue","targetShape","shadow","registerAxisPointerClass","LegendModel","_layout","ScrollableLegendModel","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","mergeAndNormalizeLayoutParams","raw","SymbolDraw","SymbolClz","lineAnimationDiff","_poly","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","hasAnimation","forSymbol","radiusExtent","angleExtent","RADIAN","Sector","createPolarClipShape","cartesian","xExtent","yExtent","expandSize","createGridClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","stepPt","middle","stepPt2","getIsIgnoreFunc","showAllSymbol","isAuto","availSize","dataLen","getSymbolSize","canShowAllSymbolForCategory","categoryDataDim","labelMap","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","mapArray","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isEmpty","valueOrigin","dataCoordInfo","valueDim","getStackedOnPoints","showSymbol","isIgnoreFunc","__temp","_step","_newPolygon","updateData","isIgnore","clipShape","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","LinearGradient","getVisualGradient","lineJoin","stackedOnSeries","_valueOrigin","setZ","stopSymbolAnimation","__points","updatedDataInfo","diffStatus","ptIdx","during","registerPainter","theme","axisPointer","crossStyle","legend","iconStyle","normal","dataZoom","timeline","timeAxis","axisTick","splitLine","splitArea","areaStyle","logAxis","gauge","candlestick","color0","borderColor0","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","axisPointerClass","oldAxisGroup","_axisGroup","gridModel","groupTransition","_splitAreaColors","_splitLine","splitLineModel","lineColors","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","polygonContain","Region","geometries","cp","MAX_NUMBER","min2","max2","exterior","loopGeo","interiors","transformTo","calculateTransform","parallelPreprocessor","handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","debounceNextCall","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","brushLink","xAxisIndex","yAxisIndex","throttleType","throttleDelay","coordInfoList","inBrush","outOfBrush","liftZ","setAreas","area","setBrushOption","getPercentWithPrecision","dataSelectableMixin","retrieveRawAttr","PieSeries","legendDataProvider","getRawData","updateSelectedMap","_createSelectableList","_defaultLabelLine","targetList","valueList","percent","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","length2","animationType","Task","define","_reset","_plan","_count","_onDirty","onDirty","_dirty","taskProto","perform","performArgs","planResult","upTask","_upstream","skip","outputData","__pipeline","currentTask","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","modBy","modDataCount","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","doProgress","outputDueEnd","unfinished","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","_callingProgress","pipe","downTask","_disposed","getUpstream","getDownstream","setOutputEnd","onIrrelevantElement","normalizeRect","makeRectPanelClipPath","localPoints","clipPointsByRect","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","makeRectIsTargetByCursor","targetModel","wrapTreePathInfo","ARRAY_LENGTH","Breadcrumb","containerGroup","makeItemPoints","packEventData","itemNode","componentSubType","selfType","nodeData","treePathInfo","targetNode","onSelect","normalStyleModel","layoutParam","emptyItemWidth","totalWidth","renderList","_prepare","_renderContent","node","TEXT_PADDING","lastX","availableSize","seriesGroups","hostGeoModel","seriesList","datas","statisticType","mapKey","dataStatistics","originalData","seriesGroup","needsDrawMap","cloneShallow","mainSeries","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","normalizeUpdateOpt","makeSeriesScope","hoverItemStyle","SymbolCtor","seriesScope","fadeOut","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","enableAnimation","ComponentView","detectSourceFormat","sourceHeader","VisualMapView","helper","doRender","visualMapModel","itemAlign","_getItemAlign","viewData","_getViewData","endsText","showLabel","_renderEndsText","viewPieceList","piece","itemGroup","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","renderBackground","positionGroup","pieceIndex","onHoverLink","hoverLink","convertDataIndex","findTargetDataIndices","modelOption","getItemAlign","getPieceList","shapeParam","getControllerVisual","newKey","getSelectedMapKey","selectedMode","o","visualMapId","convertDimNameToNumber","setEncodeAndDimensions","getRawIndicesByActiveState","theActiveState","parallelIndex","inactiveOpacity","activeOpacity","FunnelSeries","getSum","minSize","funnelAlign","parseGeoJson","View","geoFixFuncs","_nameCoordMap","loadGeoJson","getReferringComponents","containCoord","message","regionsMap","regionName","specialArea","_regionsMap","fixFunc","rawTransformable","_rawTransformable","_updateTransform","getRegion","getRegionByCoord","getGeoCoord","regionRect","noRoam","otherAxisOnZeroOf","rawAxisPosition","onZero","axisOffset","posBound","onZeroCoord","updateViewOnPan","controllerHost","updateViewOnZoom","zoomDelta","zoomX","zoomY","newZoom","zoomScale","xAxis","yAxis","zrColor","eventUtil","vendors","assembleCssText","tooltipModel","transitionDuration","duration","transitionText","vendorPrefix","assembleTransition","toHex","borderName","camelCase","assembleFont","TooltipContent","container","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","clearTimeout","_inContent","normalizeEvent","onmouseleave","hideLater","_hideDelay","domStyle","setContent","setEnterable","enterable","getSize","viewportRootOffset","setTimeout","isShow","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","mergeAt","start1","length1","start2","cursor1","cursor2","dest","count1","count2","exit","_minGallop","Error","mergeLow","customCursor","customDest","mergeHigh","mergeRuns","forceMergeRuns","pushRun","_runStart","_runLength","remaining","ts","minRun","minRunLength","force","p0","Clip","isArrayLike","arraySlice","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","cloneValue","rgba2String","rgba","createTrackClip","animator","oneTrackDone","keyframes","propName","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","lastValue","getArrayDim","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","life","_loop","_delay","onframe","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","linkList","TreeNode","hostTree","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","suppressVisitSub","updateDepthAndHeight","getNodeById","getId","getAncestors","includeSelf","ancestors","getValue","setLayout","getLayout","levelModel","getLevelModel","isExpand","getLeavesModel","ignoreParent","isAncestorOf","isDescendantOf","getNodeByDataIndex","getNodeByName","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","tree","levels","leaves","listData","dimMax","buildHierarchy","dataNode","addChild","mainData","struct","structAttr","VisualMapModel","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemSymbol","pieceList","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","mappingOption","mappingMethod","dataExtent","visualTypesInPieces","visualTypes","listVisualTypes","pieces","hasSel","findPieceIndex","pieceInterval","getColorVisual","curr","setStop","valueState","splitStep","close","cate","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","lg","retrieveVisuals","GestureMgr","pointPair","recognize","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","recognizers","gestureInfo","pinch","pinchEnd","pinchPre","pinchCenter","parallelVisual","candlestickVisual","candlestickLayout","TimelineAxis","subPixelOptimize","LargeArr","Float32Array","candleWidth","barMaxWidth","barMinWidth","barWidth","calculateCandleWidth","openDim","closeDim","lowestDim","highestDim","isSimpleBox","large","tmpIn","tmpOut","openVal","closeVal","lowestVal","highestVal","getSign","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","subPixelOptimizePoint","brushRect","makeBrushRect","pmin","pmax","getCoordSysDefineBySeries","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SERIES_LAYOUT_BY_ROW","normalizeDimensionsDefine","displayName","arrayRowsTravelFirst","maxLoop","value0","doGuessOrdinal","sample","detectValue","row","datasetModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","datasetIndex","getDatasetModel","datasetOption","completeResult","findPotentialName","potentialNameDimIndex","firstIndex","objectRowsCollectDimensions","colArr","completeBySourceData","coordSysDefine","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","firstCategoryDimIndex","categoryAxisMap","firstNotOrdinal","nameDimIndex","makeDefaultEncode","guessOrdinal","curveUtil","EffectLine","lineData","createLine","_updateEffectSymbol","effectLineProto","effectModel","_symbolType","setColor","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","__t","animate","updateSymbolPosition","__p1","__cp1","__p2","quadraticDerivativeAt","Diff","buildValues","components","newArr","oldArr","componentPos","componentLen","newPos","oldPos","component","clonePath","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","undefined","canAdd","canRemove","pushComponent","last","commonCount","tokenize","RoamController","roamHelper","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","otherRegionEl","__regions","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","fromView","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","geometry","hoverShowLabel","isDataNaN","useInsideStyle","hoverSilentOnTouch","_updateController","mapDraw","action","updateMapSelectHandler","enable","makeActionBase","mouseX","mouseY","setPointerChecker","getViewRectAfterRoam","vector","mIdentity","isNotAroundZero","transformableProto","parentHasTransform","invert","tmpTransform","v2","transformCoordToGlobal","Displayable","src","_image","createOrUpdateImage","onload","sWidth","sHeight","drawRectText","minValue","maxValue","nodeValue","mapValueToColor","mapValueToVisual","customColor","LegendView","ScrollableLegendView","newlineDisabled","_currentIndex","_containerGroup","getContentGroup","_controllerGroup","_showController","resetInner","__rectSize","renderInner","me","controllerGroup","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","layoutInner","contentGroup","orientIdx","hw","yx","contentRect","controllerRect","showController","contentPos","containerPos","controllerPos","mainRect","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","total","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","__legendDataIndex","itemRect","itemLoc","startIdx","winRect","getItemRect","startRect","selector","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","VISUAL","BRUSH","doDispatch","brushSelected","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","selectors","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","bSelector","sel","brushTargetManager","setInputRanges","brushIndex","thisBrushSelected","brushId","brushName","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRect","boundingRectBuilders","visualMappings","linkOthers","brushed","stepAParallel","brushModelNotControll","controlSeries","stepAOthers","seriesBrushSelected","applyVisual","getBoundingRectFromMinMax","minMax","getTooltipPosition","axisDefault","valueAxisDefault","defaultsShow","nameTextStyle","showName","nameFormatter","nameGap","indicatorModels","indicatorOpt","iNameTextStyle","indName","getIndicatorModels","indicator","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","onLeave","record","doEnter","records","useHandler","eventType","dis","pendings","showTip","hideTip","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","symbolProto","getScale","driftSymbol","_createSymbol","keepAspect","symbolPath","toLastFrame","getSymbolPath","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","symbolInnerColor","z2Origin","__z2Origin","useNameLabel","isAnimationEnabled","onEmphasis","ratio","onNormal","keepLabel","symbolUtil","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","labelHoverModel","labelDimIndex","radiusAxisModel","axisAngle","layoutAxis","splitLines","Circle","mergePath","splitAreas","prevRadius","_dataStackHelper","_completeDimensions","completeDimensions","_createDimensions","_symbol","dataStack","createList","createScale","isInstance","mixinAxisModelCommonMethods","ArrayCtor","m1","m2","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","OrdinalMeta","scaleProto","OrdinalScale","_ordinalMeta","getOrdinal","rank","niceTicks","niceExtent","SKIP_PROPS","CandlestickView","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","_clear","_incrementalRenderLarge","_incrementalRenderNormal","isLargeDraw","setBoxCommon","createLarge","NormalBoxPath","__simpleBox","LargeBoxPath","__sign","largePoints","elP","elN","setLargeStyle","suffix","Style","RectText","dragging","inplace","rectContain","animateStyle","updateDataSelected","toggleItemSelected","midAngle","PiePiece","sector","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","_updateLabel","labelText","linePoints","labelLineModel","labelLineHoverModel","inside","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","arrySlice","_$handlers","one","_h","newList","args","argLen","triggerWithContext","eachEdge","_axisHelper","updatePolarScale","setAxis","polarCreator","polarList","polarModel","findAxisModel","angleAxisModel","resizePolar","getSeriesStackId","getAxisKey","lastStackCoords","barWidthAndOffset","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barCategoryGap","coordSysName","barGapPercent","autoWidth","column","lastColumn","widthSum","calRadialBar","filter","getSeriesByType","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","barMinAngle","baseDim","stacked","valueAxisStart","baseValue","baseCoord","radiusSpan","angleSpan","selectableMixin","GeoModel","_optionModelMap","reduce","optionModelMap","regionOpt","scaleLimit","categoryFilter","categoryVisual","edgeVisual","circularLayout","createView","IndicatorAxis","IntervalScale","getScaleExtent","Radar","radarModel","_indicatorAxes","indicatorModel","indicatorAxis","getIndicatorAxes","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","viewSize","indicatorAxes","radarSeries","increaseInterval","exp10","LN10","f","rawExtent","fixedMin","getMin","fixedMax","getMax","getInterval","setInterval","halfSplitNumber","radarList","radar","Graph","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","link","addEdge","coordSysCtor","dimensionNames","datasAttr","rangeStart","eqNaN","rangeEnd","getNeedCrossZero","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","getCoordinateSystems","coordinateSystemCreator","mathAbs","hasTypedArray","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arcTo","toStatic","setLineDash","lineDash","lineDashSum","setLineDashOffset","appendPath","appendSize","appendPathData","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","rebuildPath","ux","uy","psi","fs","scaleX","scaleY","ctor","treeOption","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","getRawDataItem","collapsed","realRoot","scaleHelper","intervalScaleProto","TimeScale","stepLvl","_stepLvl","ONE_HOUR","minInterval","maxInterval","fixMin","fixMax","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","bisect","level","yearSpan","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","ONE_SECOND","ONE_MINUTE","ONE_DAY","useUTC","clipOverflow","hoverLayerThreshold","axisExpandCenter","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","_initDimensions","setAxisExpand","dependentModels","parallelAxis","wx","getSystemInfoSync","browser","os","svgSupported","touchEventsSupported","worker","navigator","ua","firefox","ie","weChat","version","SVGRect","pointerEventsSupported","detect","userAgent","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","ancestor","moveSubtree","wl","wr","shift","change","modifier","prelim","defaultSeparation","defaultAncestor","pop","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","getViewRect","pathTool","colorTool","Ring","BezierCurve","Arc","IncrementalDisplayable","EMPTY_OBJ","createFromString","centerGraphic","resizePath","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","__normalStl","doSingleEnterHover","__isHover","insideRollbackOpt","insideRollback","textStrokeWidth","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","specifiedTextStyle","setTextStyleCommon","host","textOffset","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textBorderColor","textBorderWidth","originalTextPosition","textTag","disableBox","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","animateOrSetProps","isUpdate","postfix","animationDelay","getAnimationDelayParams","extendShape","extendPath","extendFromString","makeImage","imageUrl","img","subPixelOptimizeRect","originWidth","originHeight","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","showNormal","showEmphasis","normalStyleText","emphasisStyleText","setText","defaultColor","gTextStyleModel","mat","hBase","vBase","vertex","g1","g2","elMap1","g","elMap","getElMap","oldEl","newProp","getAnimatableProps","clipRectByRect","targetRect","throttle","DataZoomView","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","dataZoomModel","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","layoutRect","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","eachTargetAxis","getAxisProxy","getTargetSeriesModels","thisAxis","thisDim","getOtherDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","getPercentRange","viewExtent","_updateInterval","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","lastRange","nonRealtime","handleInterval","handleHeight","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","barTransform","textPoint","labelPrecision","getPixelPrecision","valueStr","showOrHide","changed","_dispatchZoomAction","localPoint","dataZoomId","getTargetCoordInfo","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","getRawValue","formattedValue","valueArr","isAscending","getSortedIndices","sizeExtent","getLinePoints","offY","textX","textY","labelPosition","isLabelInside","labelLineLen","layerSeries","getLayerSeries","keyGetter","newLayersGroups","process","oldLayersGroups","points0","layerGroup","rectEl","_layersSeries","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","toArr","toObj","markArea","mpData","mlData","breadcrumb","processSeries","axisOpt","parallel","parallelOpt","calendarOpt","radarOpt","geoOpt","regionObj","timelineOpt","toolboxOpt","fixShadow","STYLE_COMMON_PROPS","createLinearGradient","createRadialGradient","styleProto","lineDashOffset","transformText","textOrigin","blend","prevStyle","firstDraw","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","getLineScale","hasFill","otherStyle","newStyle","getGradient","canvasGradient","addColorStop","hasKeys","mappings","Creater","__hidden","createMappings","__alphaForOpacity","keys","visualTypesMap","eachItem","valueOrIndex","rawDataItem","prepareVisualTypes","incrementalApplyVisual","excludes","includes","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","paletteScope","categoriesData","getCategoriesData","categoryNameIdxMap","dataView","back","saveAsImage","typeNames","pie","scatter","effectScatter","treemap","boxplot","heatmap","sankey","funnel","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","prefix","withName","withoutName","multiple","separator","allData","partialData","DefaultDataProvider","dimSize","_source","_offset","_dimSize","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","parseAndCollect","retrieveRawValue","getProvider","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","mayLabelDimType","otherDimArr","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","encodeTooltip","barPolar","borderColorQuery","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","getTargetSeries","seriesModelMap","overallReset","filterData","percentRange","getDataPercentWindow","valueRange","setRawRange","startValue","endValue","debugMode","getMarkerPosition","clampData","progressiveChunkMode","markerHelper","LineDraw","markLineTransform","mlModel","mlType","valueDataDim","numCalculate","valueIndex","mlFrom","mlTo","dataTransform","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","updateSingleMarkerEndLayout","isFrom","xPx","yPx","markLineModel","fromData","toData","__to","markerGroupMap","renderSeries","lineDrawMap","lineDraw","coordDimsInfos","optData","dimValueGetter","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","DEFAULT_BAR_BOUND","ContinuousModel","calculable","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","auto","getSelected","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","Dispatcher","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","_update","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","isFinished","sankeyLayout","sankeyVisual","_echarts","_export","DATAS","MAIN_DATA","transferInjection","isMainData","linkAll","linkSingle","changeInjection","cloneShallowInjection","getLinkedData","main","TRANSFERABLE_METHODS","wrapMethod","CHANGABLE_METHODS","roams","InsideZoomView","allCoordIds","coordInfo","generateCoordId","coordModel","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","_onPan","zoomGetRange","_onZoom","zoomLock","disabled","roamControllerOpt","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","oldX","oldY","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","coordSysDimDefs","registeredCoordSys","axisMap","hasNameEncode","dimInfoList","generateCoord","categoryAxisModel","stackCalculationInfo","firstDataNotNull","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","isNumeric","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolMeta","output","boundingLength","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categoryDim","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","prepareLineWidth","unitLength","pathLen","absBoundingLength","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","coordSysRect","pictorialShapeStr","updateBar","dataBackground","fillerColor","handleIcon","handleStyle","showDetail","SunburstPiece","that","virtualRoot","newRoot","getViewRoot","renderLabelForZeroData","_oldChildren","processNode","newId","oldId","newNode","oldNode","removeNode","doRenderNode","dualTravel","viewRoot","virtualPiece","_onclickEvent","_rootToNode","renderRollUp","highlightPolicy","unhighlight","_initEvents","targetFound","nodeClick","linkTarget","open","transformPath","cc","vMag","vRatio","u","vAngle","acos","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathOptions","pathProxy","cs","RegExp","prevCmd","arr","cpx","cpy","ctlPtx","ctlPty","createPathProxyFromString","pathEls","pathList","pathEl","pathBundle","TimelineView","_axis","_viewRect","_timer","_currentPointer","_mainGroup","_labelGroup","timelineModel","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","fromPos","boundIdx","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","normalLabelModel","_renderControl","playState","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","pointerModel","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","onUpdate","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","axisCoord","nextIndex","noAnimation","RADIAN_EPSILON","TIME_REG","quantityExponent","domain","subDomain","subRange","all","_trim","returnStr","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","pi2","hour","UTC","quantity","exponent","littleThan","currClose","_format","DIMENSION_LABEL_REG","rawValue","rawDataIndex","marker","labelProp","getLineDash","lineType","dotSize","dashSize","Displayble","IncrementalDisplayble","_temporaryDisplayables","_cursor","clearDisplaybles","addDisplayable","notPersistent","addDisplayables","displayables","eachPendingDisplayable","localPos","preventIncremental","coordSysCreator","blurSize","pointSize","maxOpacity","minOpacity","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","filterMode","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","seriesAxisIndex","globalOption","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","hostedBy","getRangePropMode","textHelper","arrayJoin","NONE","mathRound","degree","round4","isAroundZero","svgEl","bindStyle","isText","pathHasFill","pathHasStroke","miterLimit","pathStr","dataLength","cmdStr","nData","dThetaPositive","isCircle","pathDataToString","svgTextDrawRectText","HTMLImageElement","__imageSrc","setAttributeNS","attrXLink","normalizeTextStyle","textSvgEl","getVerticalAlignForSvg","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","createTextNode","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","shapes","_createBarGroup","createPolygon","_dragHandle","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","zrender","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","FILTER","LAYOUT","GLOBAL","CHART","COMPONENT","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","MessageCenter","ECharts","themeStorage","_dom","renderer","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","ecInstance","coordSysMgr","getComponentByElement","modelInfo","__ecComponentInfo","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_pendingActions","_onframe","ecIns","bindRenderedEvent","setAsPrimitive","echartsProto","doConvertPixel","coordSysList","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","remainTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","getOption","getSvgDataUrl","getDataURL","excludeComponents","excludesComponentViews","__viewId","url","toDataURL","getConnectedDataURL","groupId","connectedGroups","canvasList","instances","chart","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","containPixel","getViewOfComponentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","colorArr","stringify","performPostUpdateFuncs","componentDirtyList","componentView","__alive","seriesDirtyMap","chartView","setDirty","dirtyMap","restorePipelines","prepareStageTasks","prepareView","updateDirectly","condition","excludeSeriesId","callView","__model","chartsMap","doDispatchAction","payloadType","actionWrap","actions","cptType","payloads","batched","eventObj","eventObjBatch","isHighDown","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","dirtyList","renderComponents","updatePayload","getPerformArgs","blendMode","updateBlend","elCount","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","MOUSE_EVENT_NAMES","eveName","actionType","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","disConnect","disconnect","getInstanceByDom","registerTheme","preprocessorFunc","priority","processor","normalizeRegister","visualTask","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerPostUpdate","postUpdateFunc","getCoordinateSystemDimensions","layoutTask","setCanvasCreator","creator","registerMap","JSON","Function","dataTool","___ec_export","lenSquare","lengthSquare","distanceSquare","distSquare","div","dot","negate","lerp","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","cached","iv","op","ep","fname","alpha","hsla2rgba","hsla","fastLerp","normalizedValue","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","arrColor","modifyHSL","H","G","B","vMin","vMax","deltaR","deltaG","deltaB","rgba2hsla","clampCssAngle","modifyAlpha","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","contentSize","domWidth","domHeight","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","getOuterSize","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","_clazz","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","parsePath","thisParentModel","Ctor","setReadOnly","customizeGetParent","Single","singles","EffectSymbol","pointsLayout","effectSymbolDraw","_updateGroupTransform","getRoamTransform","actionTypes","retrieveTargetInfo","originViewRoot","aboveViewRoot","resetViewRoot","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","_createPolyline","polylineProto","_updateCommonStl","hoverLineStyle","legendSelectActionHandler","selectedMap","isToggleSelect","legendData","isItemSelected","cellWidth","cellHeight","dayCount","SingleAxis","_adjustAxis","_updateAxisTransform","coordBase","extentSum","HeatmapLayer","visualMapOfThisSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","dataDims","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","roamTransform","lng","lat","isInRange","dataSpan","getIsInContinuousRange","getIsInPiecewiseRange","getNormalizer","getColorMapper","curveTool","v3","v2DistSquare","intersectCurveCircle","curvePoints","radiusSquare","_t","nextDiff","tmp0","quadraticSubdivide","pts","pts2","__original","originalPoints","shadowStyle","gridIndex","gridId","extraOption","pointerChecker","_opt","mousedownHandler","mousemoveHandler","mouseupHandler","mousewheelHandler","mousewheel","pinchHandler","controlType","disable","isDragging","isPinching","_pinching","notLeftMouse","checkKeyBinding","isTaken","roamController","_vector","v2Create","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","onet","cubicDerivativeAt","t1","disc","K","discSqrt","Y1","Y2","T","ASqrt","cubicSubdivide","p01","p12","p23","p012","p123","p0123","d1","d2","divider","quadraticProjectPoint","CartesianAxisPointer","getCartesian","getAxisDimIndex","unitX","unitY","Definable","tagNames","markLabel","domName","_zrId","_tagNames","_markLabel","_domName","nextId","getDefs","addDom","removeDom","getDoms","doms","tags","colorPaletteMixin","_sourceHelper","dataTask","dataTaskCount","dataTaskReset","wrapData","dataBeforeProcessed","autoSeriesName","themeSubType","hasClass","getTheme","getDefaultOption","fillDataTextStyle","newSeriesOption","task","getCurrentTask","formatSingleValue","tooltipDims","tooltipDimLen","isValueArr","vertially","setEachItem","dimHead","valStr","formatArrayValue","colorEl","animationEnabled","coordDimToDataDim","pipeTask","nameArr","getSeriesAutoName","dataTaskProgress","onDataSelfChange","pipeline","getPipeline","agentStubMap","smoothSpline","smoothBezier","controlPoints","cp2","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","isLargeRender","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","FunnelPiece","funnelPieceProto","opacityAccessPath","funnelPiece","dataOpt","offsetCenter","detail","dev","MapSeries","_fillOption","seriesNames","otherIndex","showLegendSymbol","dataRangeHoverLink","NodeHighlightPolicy","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","getRootId","getNodeColor","stateStyle","activeNode","policy","isNodeHighlighted","onHighlight","onDownplay","getLabelAttr","labelMinAngle","labelPadding","rotateType","stateAttr","saveAsImageLang","SaveAsImage","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","write","evt","bubbles","cancelable","dispatchEvent","COORDS","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","themeRiverLayout","baseY0","timeDim","layerPoints","singleLayer","layerNum","pointNum","sums","temp","computeBaseline","baseLine","ky","layerIndex","colorList","getBorderLineDash","ATTR","giveStore","cleanStore","store","onPan","wrapAndDispatch","onZoom","getRange","dataZoomInfos","dataZoomInfo","theDataZoomId","theCoordId","newRecord","createController","controllerParams","typePriority","type_true","type_move","type_false","type_undefined","oneType","mergeControllerParams","getPathToRoot","validPayloadTypes","targetNodeId","viewPath","nodeDataIndex","r1","r2","r3","r4","SankeyShape","cpx1","cpy1","cpx2","cpy2","halfExtent","curvature","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","dragX","dragY","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","forceInstance","oldStep","getNodeByIndex","stopped","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesList","_initCartesian","gridProto","fixAxisOnZero","otherAxis","onZeroAxisIndex","canOnZeroToAxis","_updateScale","ignoreContainLabel","axesList","adjustAxes","axisExtentSum","updateAxisTransform","labelUnionRect","axesMapOnDim","coordList","getCartesians","_findConvertTarget","coordsList","axisPositionUsed","axesCount","createAxisCreator","addAxis","isCartesian2D","axesModels","findAxesModels","axesTypes","grids","returnFalse","createDom","newDom","newDomStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","__canvasGradient","fillRect","globalImageCache","imageOnLoad","cachedImgObj","__cachedImgObj","pending","pendingWrap","cbPayload","hostEl","newImageOrSrc","__zrImageSrc","_contentGroup","_backgroundEl","viewportSize","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","hitRect","legendIndex","dataName","CATEGORY_DEFAULT_VISUAL_INDEX","_normalizeData","normalizers","visualHandler","visualHandlers","_doMap","normalizeVisualRange","hasSpecialVisual","originIndex","preprocessForPiecewise","categoryMap","visualArr","setVisualToOption","preprocessForSpecifiedCategory","normalized","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","piecewise","getSpecifiedVisual","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","makeDoMap","symbolCfg","doMapToArray","applyValue","sourceExtent","addVisualHandler","isPrimary","newVisual","newVal","hasVisual","types","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","isDomLevel2","addEventListener","MOUSE_EVENT_REG","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","stopPropagation","returnValue","targetTouches","changedTouches","button","attachEvent","removeEventListener","detachEvent","DEFAULT_SMOOTH","createLinePoints","isEmptyValue","addEl","dataGroup","updateElCommon","_dataGroup","newDataIndex","oldDataIndex","active","inactive","_dataProvider","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","cloneChunk","originalChunk","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","invertedIndicesMap","dimensionName","_indices","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","getRawValueFromStore","chunkSize","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","getDimensionsOnCoord","dimensionsSummary","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","dimLen","dimensionInfoMap","idList","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","invertedIndices","prepareInvertedIndex","getIndices","thisCount","buffer","rawIdx","dimStore","_getFast","dimData","initialExtent","dimExtent","currEnd","setApproximateExtent","getMedian","dimDataArray","sortedDimDataArray","maxDistance","nearestIndices","contextCompat","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","rawExtentOnDim","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","otherList","thisList","itemVisual","clearAllVisual","setItemDataAndSeriesIndex","injectFunction","originalMethod","v2Distance","interpolate","isLoop","segs","w2","w3","TYPE_DELIMITER","IS_CONTAINER","classBase","superClass","RootClass","mandatoryMethods","$constructor","ExtendedClass","classAttr","entity","registerClass","Clazz","checkClassType","makeContainer","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","hasSubTypes","originalExtend","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","textBaseline","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","categoryNames","mapSymbolLayout","mapDataStatistic","createDataSelectAction","effectType","showEffectOn","rippleEffect","barItemStyle","coordinateSystemType","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","animateProperty","animateTarget","isRadial","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","getBarItemStyle","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","hasParallelSeries","createParallelIfNeeded","axisOption","parallelOption","mergeAxisOptionFromParallel","isPolyline","isLarge","lineCoords","segCount","totalCoordsCount","getLineCoordsCount","getLineCoords","_axisPointer","fixValue","updateAxisPointer","disposeAxisPointer","axisView","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","ec2Types","compatibleEC2","geoCoordMap","Russia","United States","United States of America","Storage","HandlerProxy","useVML","painterCtors","ZRender","rendererType","vml","handerProxy","_needsRefresh","addRoot","delRoot","zLevel","triggerRendered","_needsRefreshHover","refreshHoverImmediately","clearAnimation","delInstance","getInstance","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","axisDataLen","originalExtent","isBaseAxisAndHasBarSeries","barSeriesModels","adjustedScale","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","adjustScaleForOverflow","categoryTickStart","tick","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","realNumberScaleTicks","categoryScaleExtent","axisLabelModel","singleRect","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","taskRecord","_pipelineMap","pCtx","progressiveEnabled","__idxInPipeline","blockIndex","threshold","pipelineMap","stageTaskMap","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","removeKey","createSeriesStageTask","overallTaskReset","overallProgress","createStub","getSeries","stubReset","stubOnDirty","agent","__block","createOverallStageTask","upstreamContext","stubProgress","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","legacyFunc","ecModelMock","apiMock","detectSeriseType","mockMethods","cond","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","accLenArr","_offsets","_length","offsets","PolarAxisPointer","coordValue","getLabelPosition","newSnapshot","snapshot","_buildAxes","_buildSplitLineAndArea","axisBuilders","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","themeRiverVisual","boxLayoutMixin","themeModel","newCptOption","optList","Class","enableSubTypeDefaulter","enableTopologicalTravel","deps","TransformDummy","_roamTransformable","_center","_zoom","rawTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","rawTransformMatrix","defaultCenter","roamTransformable","_rawTransform","_oldTree","updateNode","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","isLeft","rootLayout","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","arrayProto","nativeForEach","forEach","nativeFilter","nativeSlice","nativeMap","nativeReduce","typeStr","isPrimitive","isDom","targetProp","sourceProp","isBuiltInObject","overlay","ownerDocument","primitiveKey","HashMap","isArr","thisMap","visit","targetAndSources","baseClazz","clazzPrototype","F","memo","find","value1","value2","concatArray","newArray","eachAfter","eachBefore","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","inEdges","outEdges","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","LineGroup","_ctor","lineDrawProto","isPointNaN","lineNeedsDraw","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","_clearIncremental","_incremental","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","nameRotate","nameTruncate","deduplication","alignWithLabel","logBase","idxMap","Uint32Arr","Float64Arr","compatEc2","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","effect","trailLength","autoPositionValues","targetValue","visualCluster","visualObj","visualMapping","actionInfos","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_mapDraw","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","getContentFromModel","seriesGroupByCategoryAxis","otherSeries","meta","groupSeries","tables","valueAxisDim","headers","columns","items","assembleSeriesWithCategoryAxis","vals","assembleOtherSeries","itemSplitRegex","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","header","parseTSVContents","blockMeta","axisKey","hasName","parseListContents","DataView","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","tryMergeDataOption","needDrawText","renderText","getStroke","polarOptArr","polarNotRadar","polarOpt","radarIndex","foundAxisModel","layoutBox","boxLayoutParams","positions","bbWidth","bbHeight","viewCoordSys","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","resultItem","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","mergeNewElOptionToExist","existItem","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","els","targetElParent","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_updateElements","_relocate","rootGroup","elOptionCleaned","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","bounding","straightLineProto","bezierCurveProto","isLine","pointAt","tangentAt","defaultSymbolType","hasCallback","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","_isZoomActive","zoomActive","dataZoomSelectActive","retrieveAxisSetting","include","makePanelOpts","xAxisDeclared","yAxisDeclared","updateZoomBtnStatus","updateBackBtnStatus","nextActive","matchOutputRanges","coordRange","setBatch","found","dzModel","findDataZoom","dataZoomOpts","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","SHADOW_PROPS","coordSysLists","coordIndex","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","_createLine","lineProto","symbolFrom","symbolTo","invScale","toPos","tangent","__position","halfPercent","__verticalAlign","__textAlign","visualOpacity","defaultLabelColor","rawVal","normalText","emphasisText","labelStyle","linePath","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","_seriesIndicesMap","notMergeColorLayer","colorLayer","themeItem","mergeTheme","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","topologicalTravel","newCptOptionList","existComponent","determineSubType","getComponentsByTypes","ComponentModelClass","createSeriesIndices","cpts","isIdArray","cpt","isNameArray","filterBySubType","queryCond","q","indexAttr","idAttr","nameAttr","getQueryCond","doFilter","queryResult","oneSeries","rawSeriesIndex","filterSeries","componentTypes","seiresIndex","isNotTargetSeries","updateMarkerLayout","markPointModel","mpModel","symbolDrawMap","CalendarModel","default","__esModule","defaultKeyGetter","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_remove","newDataIndexMap","oldDataKeyArr","newDataKeyArr","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","dataBackgroundColor","msg","nest","resolveCollisions","nodesByBreadth","ascendingDepth","nodeY","relaxRightToLeft","weightedTarget","getEdgeValue","relaxLeftToRight","weightedSource","ascendingTargetDepth","ascendingSourceDepth","ascending","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextNode","indexEdge","nodeIndex","moveSinksRight","kx","scaleNodeBreadths","computeNodeBreadths","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","sourceName","targetName","focusNodeAdjacency","circular","rotateLabel","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","roam","nodeScaleRatio","stackResultDim","echartsAPIList","chartInstance","parallelAxisModel","_axisTickLabelBuilder","NORMALIZED_EXTENT","fixExtentWithBands","nTick","getTickModel","ticksLen","ticksItem","fixOnBandTicksCoords","_updateData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","genName","fromZero","sysDims","dataDimNameMap","coordDimNameMap","dimCount","optDimCount","sysDimItem","sysDimItemDimsDef","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","pointsConverter","svgURI","createElementNS","fetchers","fetch","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","currCall","lastCall","lastExec","timer","thisDelay","thisDebounce","debounceDelay","fnAttr","originFn","lastThrottleType","markerModelKey","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","createDependencyGraphItem","predecessor","successor","targetNameList","fullNameList","noEntryList","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationEasingUpdate","shadowTemp","orignalBrush","modified","roundNumber","_intervalPrecision","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","originalVal","radarLayout","_needCollect","needCollect","_deduplication","createByAxisModel","dedplication","getOrCreateMap","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","__data","ToolboxModel","showTitle","containLabel","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeModel","nodeLayout","isInView","nodeItemStyleModel","levelItemStyle","visualName","buildVisuals","borderColorSaturation","thisNodeColor","calculateColor","calculateBorderColor","mapping","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","mapIdToIndex","getValueVisualDefine","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","markerTypeCalculator","dataDimToCoordDim","baseDataDim","hasXAndY","hasXOrY","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","upperLabel","gapWidth","visualDimension","visibleMin","childrenVisibleMin","completeTreeValue","childValue","thisValue","hasColorDefine","globalColorList","modelColor","level0","setDefault","setLayoutInfo","idIndexMap","_idIndexMap","_idIndexMapCount","mapLocation","largeLayout","unitAngle","x12","y12","_a","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","_startForceLayoutIteration","_layouting","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","nodeScale","groupScale","groupZoom","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","seiresModelMap","__paletteScope","dataAll","filteredIdx","singleDataColor","maskColor","mask","animateShape","valueStart","getValueStart","baseDataOffset","stackedData","updateDom","clipPathEl","cloneNode","_textDom","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","rootRect","viewAbovePath","rootSize","currNode","defaultSize","viewArea","currNodeValue","upperHeight","getUpperLabelHeight","estimateRootSize","viewRootLayout","squarify","hideChildren","thisLayout","halfGapWidth","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","deletePoint","filterByThreshold","isLeafRoot","initChildren","rowFixedLength","best","score","worst","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","isAboveViewRoot","childClipRect","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","STACK_PREFIX","isOnCartesian","isInLargeMode","seriesInfoList","doCalBarWidthAndOffset","seriesInfo","valueAxisHorizontal","valueDimIdx","valuePair","getValueAxisStart","widthAndOffsets","lastStackCoordsOrigin","isValueAxisH","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","linkedNodesFinder","effectedModels","lineContain","quadraticContain","LargeLineShape","findDataIndex","LargeLineDraw","largeLineProto","lineEl","_setCommon","isIncremental","RadarSeries","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","core","$JSON","linesLayout","linesVisual","PointerPath","formatLabel","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","tickLine","valueExtent","detailModel","funnelLayout","getStore","resourceKey","userKey","mapModel","_renderSymbols","fullData","fullIndex","polygonGroups","__mapOriginalZ2","roundRectHelper","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","applyTextRotation","placeToken","lineTop","needDrawBackground","drawBackground","getTextXForPadding","setCtx","getFill","strokeText","fillText","isPlainBg","onBgImageLoaded","getBoxPosition","blockHeiht","baseX","baseY","__textCotentBlock","boxPos","boxX","boxY","tokenCount","usedWidth","lineXLeft","lineXRight","drawRichText","renderRichText","needDrawBg","renderPlainText","LargeSymbolDraw","_updateSymbolDraw","_finished","opacityMap","itemOpacity","Z2","initRootElStyle","coordsize","coordorigin","rgb2Str","append","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillAndStroke","vmlEl","zrEl","isFill","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateFillNode","dashstyle","updateStrokeNode","_vmlEl","needTransform","strokeEl","weight","zIndex","removeRectText","appendRectText","ow","oh","isImage","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","body","ex","offsetWidth","fromTextEl","fontString","variant","fontVariant","family","getFontStyle","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","textVmlElStyle","string","String","encodeHtmlAttribute","getLineSelectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","nearZero","namenda","miu","v4","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","VISUAL_PRIORITY","resultVisual","concreteDim","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","_curve","someVectorAt","isTangent","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","comparer","index1","index2","nearestIdx","theValue","htmlName","htmlValue","_updateLineDraw","isSvg","_lastZlevel","_showEffect","hasEffect","_hasEffet","_isPolyline","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","flag","removeDuplicate","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","nodeGroup","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","renderNode","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","animationWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_clearController","findTarget","_zoomToNode","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","renderContent","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","lasts","prepareAnimationWhenHasOld","zInLevel","zb","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","brushHelper","elementList","fromAxisAreaSelect","areaWidth","builderOpt","_refreshBrushController","extentLen","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","componentProto","splitList","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","commonLabelModel","labelTextAlign","labelTextVerticalAlign","prevAngle","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","ecUtil","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","labelLayoutList","hasLabelRotate","labelLineLen2","leftList","rightList","avoidOverlap","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesLabel","seriesTpl","getSeriesTypeName","displayCnt","dataLabels","keyValues","userConfig","hasShadow","_shadowDom","_shadowDomId","domChild","blur","stdDeviation","SingleAxisView","selfBuilderAttr","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","findTargetInfo","coordSyses","rangeOffset","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","getScales","getDefaultBrushType","getPanelRect","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","axisConvert","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","CandlestickSeries","animationUpdate","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","coordinates","c2","decode","featureObj","pieLayout","updateController","modelId","$from","labelDims","IRRELEVANT_EXCLUDES","targetCoordSysModel","colorAll","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","Sub","defaultShape","thisShape","Cartesian","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","rootDepth","isAsc","sortOrder","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle","axisTrigger","collect","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","LargeSymbolPath","symbolProxy","symbolProxyShape","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_traversalHelper","_layoutHelper","sep","coorX","coorY","finalCoor","commonLayout","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","oldOptionBackup","newParsedOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","oldOption","newCptOpt","oldCptOpt","isRecreate","optionBackup","indices1","indices2","indicesEquals","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","useOrigin","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","boundValue","boundPercent","seriesExtent","fixExtentByAxis","calculateDataExtent","dataWindow","valueSpan","setMinMaxSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","originalLarge","originalProgressive","checkPropInLink","linkPropValue","axisPropValue","isHandleTrigger","seriesInvolved","linksOption","linkGroups","axesInfoInCoordSys","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","makeAxisPointerModel","groupIndex","linkOption","getLinkGroupIndex","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","collectSeriesInfo","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","gradientPixels","pixelsSingleState","Uint8ClampedArray","_event","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","domHandlers","touchstart","touchmove","touchend","click","isPointerFromTouch","pointerType","HandlerDomProxy","mountHandlers","makeMouseHandler","initDomHandler","handlerDomProxyProto","processedMapType","mapSymbolOffsets","subMapSeries"],"mappings":"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","file":"static/js/chunk-10cd.0311b253.js","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(parallelVisual);","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function () {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","var _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendComponentView({\n  type: 'single'\n});","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar matrix = require(\"../core/matrix\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    if (typeof val === 'string' && val.indexOf('NaN') > -1) {\n      console.log(val);\n    }\n\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation || 0;\n    var transform = matrix.create(); // Apply textRotate to element matrix\n\n    matrix.rotate(transform, el.transform, rotate);\n    setTransform(textSvgEl, transform);\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n\n  if (!layout) {\n    console.log(node.getLayout());\n  }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  batch.length && record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n      var y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n      var y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    var draggable = seriesModel.get('draggable');\n\n    if (draggable) {\n      nodeData.eachItemGraphicEl(function (el, dataIndex) {\n        el.drift = function (dx, dy) {\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      });\n    }\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports', 'echarts'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n}(this, function (exports, echarts) {\n    var log = function (msg) {\n        if (typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    };\n    if (!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n\n    var colorPalette = [\n        '#2ec7c9','#b6a2de','#5ab1ef','#ffb980','#d87a80',\n        '#8d98b3','#e5cf0d','#97b552','#95706d','#dc69aa',\n        '#07a2a4','#9a7fd1','#588dd5','#f5994e','#c05050',\n        '#59678c','#c9ab00','#7eb00a','#6f5553','#c14089'\n    ];\n\n\n    var theme = {\n        color: colorPalette,\n\n        title: {\n            textStyle: {\n                fontWeight: 'normal',\n                color: '#008acd'\n            }\n        },\n\n        visualMap: {\n            itemWidth: 15,\n            color: ['#5ab1ef','#e0ffff']\n        },\n\n        toolbox: {\n            iconStyle: {\n                normal: {\n                    borderColor: colorPalette[0]\n                }\n            }\n        },\n\n        tooltip: {\n            backgroundColor: 'rgba(50,50,50,0.5)',\n            axisPointer : {\n                type : 'line',\n                lineStyle : {\n                    color: '#008acd'\n                },\n                crossStyle: {\n                    color: '#008acd'\n                },\n                shadowStyle : {\n                    color: 'rgba(200,200,200,0.2)'\n                }\n            }\n        },\n\n        dataZoom: {\n            dataBackgroundColor: '#efefff',\n            fillerColor: 'rgba(182,162,222,0.2)',\n            handleColor: '#008acd'\n        },\n\n        grid: {\n            borderColor: '#eee'\n        },\n\n        categoryAxis: {\n            axisLine: {\n                lineStyle: {\n                    color: '#008acd'\n                }\n            },\n            splitLine: {\n                lineStyle: {\n                    color: ['#eee']\n                }\n            }\n        },\n\n        valueAxis: {\n            axisLine: {\n                lineStyle: {\n                    color: '#008acd'\n                }\n            },\n            splitArea : {\n                show : true,\n                areaStyle : {\n                    color: ['rgba(250,250,250,0.1)','rgba(200,200,200,0.1)']\n                }\n            },\n            splitLine: {\n                lineStyle: {\n                    color: ['#eee']\n                }\n            }\n        },\n\n        timeline : {\n            lineStyle : {\n                color : '#008acd'\n            },\n            controlStyle : {\n                normal : { color : '#008acd'},\n                emphasis : { color : '#008acd'}\n            },\n            symbol : 'emptyCircle',\n            symbolSize : 3\n        },\n\n        line: {\n            smooth : true,\n            symbol: 'emptyCircle',\n            symbolSize: 3\n        },\n\n        candlestick: {\n            itemStyle: {\n                normal: {\n                    color: '#d87a80',\n                    color0: '#2ec7c9',\n                    lineStyle: {\n                        color: '#d87a80',\n                        color0: '#2ec7c9'\n                    }\n                }\n            }\n        },\n\n        scatter: {\n            symbol: 'circle',\n            symbolSize: 4\n        },\n\n        map: {\n            label: {\n                normal: {\n                    textStyle: {\n                        color: '#d87a80'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderColor: '#eee',\n                    areaColor: '#ddd'\n                },\n                emphasis: {\n                    areaColor: '#fe994e'\n                }\n            }\n        },\n\n        graph: {\n            color: colorPalette\n        },\n\n        gauge : {\n            axisLine: {\n                lineStyle: {\n                    color: [[0.2, '#2ec7c9'],[0.8, '#5ab1ef'],[1, '#d87a80']],\n                    width: 10\n                }\n            },\n            axisTick: {\n                splitNumber: 10,\n                length :15,\n                lineStyle: {\n                    color: 'auto'\n                }\n            },\n            splitLine: {\n                length :22,\n                lineStyle: {\n                    color: 'auto'\n                }\n            },\n            pointer : {\n                width : 5\n            }\n        }\n    };\n\n    echarts.registerTheme('macarons', theme);\n}));","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n * \n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    zrUtil.each(zeroIndegrees, function (node) {\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n      zrUtil.each(node.outEdges, function (edge) {\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      });\n    });\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (var i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // If the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 5e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;"],"sourceRoot":""}